# This file started as a mash-up between the SKA cpp-template and tango-example.

image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

variables:
    # Needed if you want automatic submodule checkout
    # For details see https://docs.gitlab.com/ee/ci/yaml/README.html#git-submodule-strategy
    GIT_SUBMODULE_STRATEGY: normal
    IMAGE_NAME: tangosnmp-test
    DOCKER_DRIVER: overlay2
    CHARTS_TO_PUBLISH: tangosnmp

stages:
    - pre-compile
    - compile
    - build
    - lint
    - test
    - publish
    - pages

# Update the "tangosnmp-builder" image which is used to compile the code.
# This only needs to be done when tango-builder is updated,
# or to use a newer version of libsnmp/g++.
create builder OCI image:
  stage: pre-compile
  tags:
    - k8srunner
  image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - ./build_builder.sh
  rules:
    - changes:
      - build_builder.sh
      - Dockerfile.builder

# compile C++ code, creating an executable that will later be packaged into a docker image
compile:
    image: registry.gitlab.com/ska-telescope/tangosnmp/builder:0.0.1
    stage: compile
    script:
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - make install
    artifacts:
        paths:
            - build

test:
  stage: test
  tags:
    - k8srunner
  image: $SKA_K8S_TOOLS_DEPLOY_IMAGE
  script:
    - kubectl version
    - make install-chart
    - make wait
    - make smoke-test
    - make k8s-test
  after_script:
    - make uninstall-chart
    - make delete-namespace
    - mkdir -p build
    - cp -rf charts/build/* build/
    - ls -la build
  environment:
    name: test
    kubernetes:
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - build
    reports:
      junit: build/report.xml

# *********************************************
# The ci badges are generated from the test results found in specified paths.
# First we need to copy the test result files to the correct paths:
move-test-artifacts:
  stage: publish
  tags:
    - k8srunner
  image: $SKA_K8S_TOOLS_DEPLOY_IMAGE
  script:
    - mkdir build/reports
    - mv build/report.xml build/reports/unit-tests.xml
    # fake files we don't actually generate in tangosnmp
    - touch build/coverage.xml build/linting.xml
    - mv build/coverage.xml build/reports/code-coverage.xml
    - mv build/linting.xml build/reports/linting.xml
    - cat build/reports/linting.xml
  artifacts:
    paths:
      - build

# Standardised included jobs
#variables: ### see variables at top of file.
#  CHARTS_TO_PUBLISH: tangosnmp
include:
# Helm Chart Publish
# https://developer.skatelescope.org/en/latest/development/software_package_release_procedure.html#package-and-publish-helm-charts-to-the-s»
#- project: 'ska-telescope/templates-repository'
#  file: 'gitlab-ci/includes/helm_publish.yml'

# OCI image
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/oci-image-build.gitlab-ci.yml'


# Create Gitlab CI badges from CI metrics
# https://developer.skatelescope.org/en/latest/tools/continuousintegration.html#automated-collection-of-ci-health-metrics-as-part-of-the-ci»
- project: 'ska-telescope/templates-repository'
  file: 'gitlab-ci/includes/post_step.yml'
