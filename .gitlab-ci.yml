# This file started as a mash-up between the SKA cpp-template and tango-example.

image: nexus.engageska-portugal.pt/ska-docker/tango-builder:latest

variables:
    # Needed if you want automatic submodule checkout
    # For details see https://docs.gitlab.com/ee/ci/yaml/README.html#git-submodule-strategy
    GIT_SUBMODULE_STRATEGY: normal
    IMAGE_NAME: tangosnmp-test
    DOCKER_DRIVER: overlay2

stages:
    - compile
    - build
    - lint
    - test
    - publish
    - pages

# Update the "tangosnmp-builder" image which is used to compile the code.
# This only needs to be done when tango-builder is updated,
# or to use a newer version of libsnmp/g++.
builder:
    tags: 
        - k8srunner
    stage: compile
    when: manual
    script:
        - cd docker
        - export DOCKER_REGISTRY_USER=ska-docker
        - export IMAGE=$DOCKER_REGISTRY_HOST/$DOCKER_REGISTRY_USER/tangosnmp-builder
        - export VERSION=`date +"%Y-%m-%d"`
        - docker build -t ${IMAGE}:${VERSION} . -f Dockerfile.build --build-arg DOCKER_REGISTRY_HOST=$DOCKER_REGISTRY_HOST --build-arg DOCKER_REGISTRY_USER=$DOCKER_REGISTRY_USER
        - docker push ${IMAGE}:${VERSION}
        - docker tag ${IMAGE}:${VERSION} ${IMAGE}:latest
        - docker push ${IMAGE}:latest

# compile C++ code, creating an executable that will later be packaged into a docker image
compile:
    image: nexus.engageska-portugal.pt/ska-docker/tangosnmp-builder
    stage: compile
    script:
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=Release
        - make install
    artifacts:
        paths:
            - build

# build docker image
build:
  stage: build
  tags:
    - k8srunner
  before_script:
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
  script:
    - ls -la build/bin/TangoSnmp
    - make build
    - make push
  artifacts:
    when: always
    paths:
      - build

lint-check-chart:
  stage: lint
  tags:
    - k8srunner
  image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3
  script:
    - make helm_dependencies
    - make chart_lint
  artifacts:
    paths:
      - build

test:
  stage: test
  tags:
    - k8srunner
  image: nexus.engageska-portugal.pt/ska-docker/deploy:0.4.3
  script:
    - kubectl version
  #  - make install-chart
  #  - make wait
  #  - make smoketest
  #  - make test
  #  after_script:
  #  - make uninstall-chart
  #  - make delete_namespace
  #  - mkdir -p build
  #  - cp -rf charts/build/* build/
  #  - ls -la build
  environment:
    name: test
    kubernetes:
      namespace: ci-$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_JOB_ID"
    paths:
      - build
    reports:
      junit: build/report.xml



publish:
  stage: publish
  tags:
    - k8srunner
  script:
    - docker login -u $DOCKER_REGISTRY_USERNAME -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY_HOST
    - make build
    - make push
